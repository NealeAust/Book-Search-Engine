{"ast":null,"code":"import _objectSpread from\"C:/Users/neale/bootcamp/my-weekly-challenge-folder/Book-Search-Engine/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import SearchBooks from'./pages/SearchBooks';import SavedBooks from'./pages/SavedBooks';import Navbar from'./components/Navbar';// Construct main GraphQL API endpoint\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var httpLink=createHttpLink({uri:'/graphql'});// Construct request middleware that will attach the JWT token to every request as an 'authorization' header\nvar authLink=setContext(function(_,_ref){var headers=_ref.headers;// get the authentication token from local storage if it exists\nvar token=localStorage.getItem('id_token');// return the headers to the context so httpLink can read them\nreturn{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:SearchBooks}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/saved\",component:SavedBooks}),/*#__PURE__*/_jsx(Route,{render:function render(){return/*#__PURE__*/_jsx(\"h1\",{className:\"display-2\",children:\"Wrong page!\"});}})]})]})})});}export default App;","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","BrowserRouter","Router","Switch","Route","SearchBooks","SavedBooks","Navbar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","httpLink","uri","authLink","_","_ref","headers","token","localStorage","getItem","_objectSpread","authorization","concat","client","link","cache","App","children","exact","path","component","render","className"],"sources":["C:/Users/neale/bootcamp/my-weekly-challenge-folder/Book-Search-Engine/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\n// Construct main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an 'authorization' header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={SearchBooks} />\n            <Route exact path='/saved' component={SavedBooks} />\n            <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"iKAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,YAAY,CACZC,aAAa,CACbC,cAAc,CACdC,cAAc,KACT,gBAAgB,CACvB,OAASC,UAAU,KAAQ,6BAA6B,CACxD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAC7C,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAExC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBACA,GAAM,CAAAC,QAAQ,CAAGf,cAAc,CAAC,CAC9BgB,GAAG,CAAE,UACP,CAAC,CAAC,CAEF;AACA,GAAM,CAAAC,QAAQ,CAAGhB,UAAU,CAAC,SAACiB,CAAC,CAAAC,IAAA,CAAkB,IAAd,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CACvC;AACA,GAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC9C;AACA,MAAO,CACLH,OAAO,CAAAI,aAAA,CAAAA,aAAA,IACFJ,OAAO,MACVK,aAAa,CAAEJ,KAAK,WAAAK,MAAA,CAAaL,KAAK,EAAK,EAAE,EAEjD,CAAC,CACH,CAAC,CAAC,CAEF,GAAM,CAAAM,MAAM,CAAG,GAAI,CAAA9B,YAAY,CAAC,CAC9B+B,IAAI,CAAEX,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC,CAC/Bc,KAAK,CAAE,GAAI,CAAA/B,aAAa,EAC1B,CAAC,CAAC,CAEF,QAAS,CAAAgC,GAAGA,CAAA,CAAG,CACb,mBACEpB,IAAA,CAACX,cAAc,EAAC4B,MAAM,CAAEA,MAAO,CAAAI,QAAA,cAC7BrB,IAAA,CAACP,MAAM,EAAA4B,QAAA,cACLnB,KAAA,CAAAE,SAAA,EAAAiB,QAAA,eACErB,IAAA,CAACF,MAAM,IAAG,cACVI,KAAA,CAACR,MAAM,EAAA2B,QAAA,eACLrB,IAAA,CAACL,KAAK,EAAC2B,KAAK,MAACC,IAAI,CAAC,GAAG,CAACC,SAAS,CAAE5B,WAAY,EAAG,cAChDI,IAAA,CAACL,KAAK,EAAC2B,KAAK,MAACC,IAAI,CAAC,QAAQ,CAACC,SAAS,CAAE3B,UAAW,EAAG,cACpDG,IAAA,CAACL,KAAK,EAAC8B,MAAM,CAAE,SAAAA,OAAA,qBAAMzB,IAAA,OAAI0B,SAAS,CAAC,WAAW,CAAAL,QAAA,CAAC,aAAW,EAAK,EAAC,EAAG,GAC5D,GACR,EACI,EACM,CAErB,CAEA,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}